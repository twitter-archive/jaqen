package com.twitter.jaqen.ntuple


class NTuple0 extends NTuple[NTuple0] {
  override def toString = "()"
}

object Generator {
  def main(args: Array[String]) {

    def ntimes(n :Int)(f: (Int) => String) = (for (i <- 1 to n) yield f(i)).mkString(", ")

    def NiTi(i: Int) = s"N$i, T$i"
    def NipTi(i: Int) = s"N$i, +T$i"
    def ntuple(i: Int, f:(Int) => String) = s"NTuple$i[" + ntimes(i) { f(_) } + "]"

    for (i <- 1 to 22) {
      println("class " + ntuple(i, NipTi) + "(" + ntimes(i){(j) => s"val _$j: T$j"} + ") extends NTuple[" + ntuple(i, NiTi) + "] {")
      println("  def toTuple = (" + ntimes(i){"_"+_} + ")")
      println("  override def toString = toTuple.toString")
      println("}")
    }
  }
}
// classes bellow have been generated by the object Generator above
class NTuple1[N1, +T1](val _1: T1) extends NTuple[NTuple1[N1, T1]] {
  def toTuple = (_1)
  override def toString = toTuple.toString
}
class NTuple2[N1, +T1, N2, +T2](val _1: T1, val _2: T2) extends NTuple[NTuple2[N1, T1, N2, T2]] {
  def toTuple = (_1, _2)
  override def toString = toTuple.toString
}
class NTuple3[N1, +T1, N2, +T2, N3, +T3](val _1: T1, val _2: T2, val _3: T3) extends NTuple[NTuple3[N1, T1, N2, T2, N3, T3]] {
  def toTuple = (_1, _2, _3)
  override def toString = toTuple.toString
}
class NTuple4[N1, +T1, N2, +T2, N3, +T3, N4, +T4](val _1: T1, val _2: T2, val _3: T3, val _4: T4) extends NTuple[NTuple4[N1, T1, N2, T2, N3, T3, N4, T4]] {
  def toTuple = (_1, _2, _3, _4)
  override def toString = toTuple.toString
}
class NTuple5[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5) extends NTuple[NTuple5[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5]] {
  def toTuple = (_1, _2, _3, _4, _5)
  override def toString = toTuple.toString
}
class NTuple6[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6) extends NTuple[NTuple6[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6]] {
  def toTuple = (_1, _2, _3, _4, _5, _6)
  override def toString = toTuple.toString
}
class NTuple7[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7) extends NTuple[NTuple7[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7)
  override def toString = toTuple.toString
}
class NTuple8[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8) extends NTuple[NTuple8[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8)
  override def toString = toTuple.toString
}
class NTuple9[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9) extends NTuple[NTuple9[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9)
  override def toString = toTuple.toString
}
class NTuple10[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10) extends NTuple[NTuple10[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10)
  override def toString = toTuple.toString
}
class NTuple11[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11) extends NTuple[NTuple11[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11)
  override def toString = toTuple.toString
}
class NTuple12[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12) extends NTuple[NTuple12[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12)
  override def toString = toTuple.toString
}
class NTuple13[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13) extends NTuple[NTuple13[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13)
  override def toString = toTuple.toString
}
class NTuple14[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14) extends NTuple[NTuple14[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14)
  override def toString = toTuple.toString
}
class NTuple15[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15) extends NTuple[NTuple15[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15)
  override def toString = toTuple.toString
}
class NTuple16[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15, N16, +T16](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15, val _16: T16) extends NTuple[NTuple16[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15, N16, T16]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16)
  override def toString = toTuple.toString
}
class NTuple17[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15, N16, +T16, N17, +T17](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15, val _16: T16, val _17: T17) extends NTuple[NTuple17[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15, N16, T16, N17, T17]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17)
  override def toString = toTuple.toString
}
class NTuple18[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15, N16, +T16, N17, +T17, N18, +T18](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15, val _16: T16, val _17: T17, val _18: T18) extends NTuple[NTuple18[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15, N16, T16, N17, T17, N18, T18]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18)
  override def toString = toTuple.toString
}
class NTuple19[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15, N16, +T16, N17, +T17, N18, +T18, N19, +T19](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15, val _16: T16, val _17: T17, val _18: T18, val _19: T19) extends NTuple[NTuple19[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15, N16, T16, N17, T17, N18, T18, N19, T19]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19)
  override def toString = toTuple.toString
}
class NTuple20[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15, N16, +T16, N17, +T17, N18, +T18, N19, +T19, N20, +T20](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15, val _16: T16, val _17: T17, val _18: T18, val _19: T19, val _20: T20) extends NTuple[NTuple20[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15, N16, T16, N17, T17, N18, T18, N19, T19, N20, T20]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20)
  override def toString = toTuple.toString
}
class NTuple21[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15, N16, +T16, N17, +T17, N18, +T18, N19, +T19, N20, +T20, N21, +T21](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15, val _16: T16, val _17: T17, val _18: T18, val _19: T19, val _20: T20, val _21: T21) extends NTuple[NTuple21[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15, N16, T16, N17, T17, N18, T18, N19, T19, N20, T20, N21, T21]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21)
  override def toString = toTuple.toString
}
class NTuple22[N1, +T1, N2, +T2, N3, +T3, N4, +T4, N5, +T5, N6, +T6, N7, +T7, N8, +T8, N9, +T9, N10, +T10, N11, +T11, N12, +T12, N13, +T13, N14, +T14, N15, +T15, N16, +T16, N17, +T17, N18, +T18, N19, +T19, N20, +T20, N21, +T21, N22, +T22](val _1: T1, val _2: T2, val _3: T3, val _4: T4, val _5: T5, val _6: T6, val _7: T7, val _8: T8, val _9: T9, val _10: T10, val _11: T11, val _12: T12, val _13: T13, val _14: T14, val _15: T15, val _16: T16, val _17: T17, val _18: T18, val _19: T19, val _20: T20, val _21: T21, val _22: T22) extends NTuple[NTuple22[N1, T1, N2, T2, N3, T3, N4, T4, N5, T5, N6, T6, N7, T7, N8, T8, N9, T9, N10, T10, N11, T11, N12, T12, N13, T13, N14, T14, N15, T15, N16, T16, N17, T17, N18, T18, N19, T19, N20, T20, N21, T21, N22, T22]] {
  def toTuple = (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22)
  override def toString = toTuple.toString
}
